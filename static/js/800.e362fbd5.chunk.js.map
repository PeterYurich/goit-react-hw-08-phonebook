{"version":3,"file":"static/js/800.e362fbd5.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","pages/PhonebookPage/Phonebook.jsx","webpack://hw-PeterYurich/./src/components/styles.module.scss?cac0"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { addContact } from 'redux/contacts/contactsOperations';\n\nimport css from '../../components/styles.module.scss';\nimport { selectAuth } from 'redux/selectors';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n  const authData = useSelector(selectAuth)\n  \nconst controlInput = evt => {\n    const { name: inputName, value: inputValue } = evt.target;\n\n    switch (inputName) {\n      case 'name':\n        setName(inputValue);\n        break;\n      case 'phone':\n        setNumber(inputValue);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (!authData.isLoggedIn) {\n      alert('Sign up to start creating your contact list or log in if you have your own account')\n    }\n    if (contacts.find(person => person.name.toLowerCase() === name.toLowerCase())) {\n      alert(`A contact with the name \"${name}\" already exists!`)\n      return\n    }\n\n    dispatch(addContact({name, number}))\n    setName('')\n    setNumber('')\n\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      ADD CONTACT\n      <label className={css.label}>\n        Name:\n        <input\n          className={css.input}\n          onChange={controlInput}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={css.label}>\n        Phone number:\n        <input\n          className={css.input}\n          onChange={controlInput}\n          value={number}\n          type=\"tel\"\n          name=\"phone\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={css.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/selectors';\n\nimport css from '../../components/styles.module.scss';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const onChange = evt => {\n    dispatch(setFilter(evt.target.value.trim()));\n  };\n\n  return (\n    <label className={css.label}>\n      Filter by name:\n      <input\n        className={css.input}\n        type=\"filter\"\n        name=\"filter\"\n        onChange={onChange}\n        value={filter}\n      ></input>\n    </label>\n  );\n};\n\nexport default Filter;","import React from 'react';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { selectContacts, visibleContacts } from 'redux/selectors';\nimport { deleteContact, fetchContacts } from 'redux/contacts/contactsOperations';\n\nimport css from 'components/styles.module.scss';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(selectContacts);\n  const handleDelete = (id) => {\n    dispatch(deleteContact(id))\n  };\n\n  const toRender = useSelector(visibleContacts)\n\n  return (\n    <ul>\n      {contacts.isLoading && <div>wait...</div>}\n      {contacts.error && <div>oops! a mistake is happend. Try again!</div> }\n      {toRender.map(person => {\n        return (\n          <li className={css.contact} key={person.id}>\n            <span className={css.personName}>\n              {person.name}: {person.number}\n            </span>\n            <button className={css.deleteBtn} onClick={() => handleDelete(person.id)}>\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\nexport default ContactList;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\n\nfunction Phonebook() {\n  return (\n    <div className=\"container\">\n      <ContactForm></ContactForm>\n      <h2>Contacts</h2>\n      <Filter></Filter>\n      <ContactList></ContactList>\n    </div>\n  );\n}\n\nexport default Phonebook","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"styles_form__k9pm4\",\"label\":\"styles_label__GQh-q\",\"input\":\"styles_input__a4HAB\",\"button\":\"styles_button__5ZwMK\",\"contact\":\"styles_contact__YKEi8\",\"personName\":\"styles_personName__bxkWs\",\"deleteBtn\":\"styles_deleteBtn__OMtL0\"};"],"names":["useState","name","setName","number","setNumber","contacts","useSelector","selectContacts","dispatch","useDispatch","authData","selectAuth","controlInput","evt","target","inputName","inputValue","value","onSubmit","preventDefault","isLoggedIn","alert","find","person","toLowerCase","addContact","className","css","onChange","type","pattern","title","required","filter","selectFilter","setFilter","trim","useEffect","fetchContacts","toRender","visibleContacts","isLoading","error","map","onClick","id","deleteContact"],"sourceRoot":""}